@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-family: Lexend, "Noto Sans", sans-serif;
    scroll-behavior: smooth;
    @apply text-white;
  }

  body {
    margin: 0;
    min-width: 320px;
    min-height: 100vh;
    @apply bg-black;
  }

  #root {
    width: 100%;
    min-height: 100vh;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply text-white;
    text-shadow: 0 0 10px rgba(168, 85, 247, 0.3);
  }

  p {
    @apply text-gray-200;
  }
}

@layer components {
  /* Layout styles */
  .layout-container {
    width: 100%;
    min-height: 100vh;
    position: relative;
    background-color: transparent;
  }

  /* Card styles */
  .card {
    @apply bg-black/70 backdrop-blur-sm border border-purple-500/30 transition-all duration-300 rounded-[2rem];
    min-height: 380px;
    transform: translateY(0);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
  }

  .card:hover {
    @apply bg-black/80 border-purple-500/50;
    transform: translateY(-12px);
    box-shadow: 
      0 20px 40px rgba(168, 85, 247, 0.2),
      0 0 0 1px rgba(168, 85, 247, 0.2),
      0 0 0 4px rgba(168, 85, 247, 0.1);
  }

  /* Button styles */
  .btn-primary {
    @apply relative overflow-hidden;
    @apply bg-transparent text-white rounded-full font-bold;
    @apply transition-all duration-300;
    @apply border border-purple-500/20;
    @apply shadow-[0_0_20px_rgba(168,85,247,0.2),inset_0_0_20px_rgba(168,85,247,0.1)];
    @apply hover:shadow-[0_0_25px_rgba(168,85,247,0.3),inset_0_0_25px_rgba(168,85,247,0.2)];
    @apply hover:border-purple-500/40;
    @apply hover:bg-purple-500/10;
    @apply hover:scale-105;
    @apply backdrop-blur-[1px];
  }

  /* Define new specific button styles */
  .neon-button {
    @apply relative overflow-hidden;
    @apply bg-transparent;
    @apply transition-all duration-300;
    box-shadow: 0 0 20px rgba(168,85,247,0.2), inset 0 0 20px rgba(168,85,247,0.1);
  }

  .neon-button:hover {
    @apply bg-purple-500/10;
    box-shadow: 0 0 25px rgba(168,85,247,0.3), inset 0 0 25px rgba(168,85,247,0.2);
  }

  .neon-button::before {
    content: '';
    @apply absolute inset-0 rounded-full;
    background: linear-gradient(90deg, rgba(168,85,247,0.1), rgba(168,85,247,0.05));
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .neon-button:hover::before {
    opacity: 1;
  }

  /* Remove the old neon button styles */
  .neon-button-main, .neon-button-coming-soon {
    @apply neon-button;
  }

  /* Animation components */
  .fade-in {
    @apply opacity-0 animate-[fadeIn_0.6s_ease-out_forwards];
  }

  .slide-up {
    @apply opacity-0 translate-y-8 animate-[slideUp_0.6s_ease-out_forwards];
  }

  .scale-in {
    @apply opacity-0 scale-95 animate-[scaleIn_0.6s_ease-out_forwards];
  }

  /* Feature card specific styles */
  .feature-card {
    @apply bg-black/60 rounded-[2rem];
    min-height: 400px;
    padding: 2rem;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    position: relative;
    overflow: hidden;
  }

  .feature-card::before {
    content: '';
    position: absolute;
    inset: 1px;
    background: linear-gradient(to bottom right, rgba(168, 85, 247, 0.1), transparent);
    border-radius: inherit;
    z-index: 0;
  }

  .feature-card > * {
    position: relative;
    z-index: 1;
  }

  .feature-card .icon-container {
    @apply text-purple-400;
    text-shadow: 0 0 10px rgba(168, 85, 247, 0.5);
    transition: transform 0.3s ease;
  }

  .feature-card:hover .icon-container {
    transform: scale(1.1);
    @apply text-purple-300;
  }

  .feature-card .title {
    @apply text-xl font-bold text-white;
    text-shadow: 0 0 10px rgba(168, 85, 247, 0.3);
    margin-bottom: 1rem;
  }

  .feature-card .description {
    @apply text-gray-300 leading-relaxed;
    font-size: 1.05rem;
  }

  /* Program card specific styles */
  .program-card {
    @apply bg-black/60 rounded-[2rem];
    min-height: 420px;
    overflow: hidden;
  }

  .program-card .content {
    padding: 1.5rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .program-card .title {
    font-size: 1.4rem;
    font-weight: 600;
    @apply text-white;
    text-shadow: 0 0 10px rgba(168, 85, 247, 0.3);
    margin-top: 0.5rem;
  }

  .program-card .description {
    @apply text-gray-300;
    line-height: 1.6;
    font-size: 1.05rem;
  }

  /* Image container in program card */
  .program-card .image-container {
    @apply rounded-[1.5rem] overflow-hidden;
    margin: -1px;
  }

  /* Programs section container */
  .programs-container {
    @apply rounded-[2rem] bg-black/40 backdrop-blur-md p-6;
    border: 1px solid rgba(168, 85, 247, 0.2);
  }

  /* Features section container */
  .features-container {
    @apply rounded-[2rem] bg-black/40 backdrop-blur-md p-6;
    border: 1px solid rgba(168, 85, 247, 0.2);
  }

  /* Navigation styles */
  nav a {
    @apply text-gray-200 hover:text-purple-300 transition-colors;
    text-shadow: 0 0 10px rgba(168, 85, 247, 0.3);
  }

  /* Header styles */
  header {
    @apply bg-black/80 border-b border-purple-500/20;
    box-shadow: 0 4px 30px rgba(168, 85, 247, 0.1);
  }

  /* Enhanced hover effect for all cards */
  .hover-lift {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hover-lift:hover {
    transform: translateY(-12px);
    box-shadow: 
      0 20px 40px rgba(168, 85, 247, 0.2),
      0 0 0 1px rgba(168, 85, 247, 0.2),
      0 0 0 4px rgba(168, 85, 247, 0.1);
  }

  /* Floating shapes */
  .shape {
    @apply absolute pointer-events-none opacity-15 blur-[0.5px] will-change-transform;
  }

  .triangle {
    width: 0;
    height: 0;
    border-left: 25px solid transparent;
    border-right: 25px solid transparent;
    border-bottom: 45px solid #3aa0e4;
    animation: floatShape 20s ease-in-out infinite;
  }

  .circle {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(135deg, #3aa0e4, #2980b9);
    animation: floatShape 15s ease-in-out infinite;
  }

  /* Scroll animations */
  [data-scroll] {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  [data-scroll].is-visible {
    opacity: 1;
    transform: translateY(0);
  }

  /* Animation delays */
  .delay-100 { animation-delay: 100ms; }
  .delay-200 { animation-delay: 200ms; }
  .delay-300 { animation-delay: 300ms; }
  .delay-400 { animation-delay: 400ms; }
  .delay-500 { animation-delay: 500ms; }

  .duration-300 { transition-duration: 300ms; }
  .duration-500 { transition-duration: 500ms; }
  .duration-700 { transition-duration: 700ms; }
  .duration-1000 { transition-duration: 1000ms; }

  /* Responsive */
  @media (prefers-reduced-motion: reduce) {
    *, ::before, ::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }

  /* Add floating circles */
  .floating-circles {
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 0;
  }

  /* Scale in animation */
  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .scale-in {
    animation: scaleIn 0.5s ease forwards;
  }

  /* Fade in animation */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade-in {
    animation: fadeIn 0.5s ease forwards;
  }

  /* Add new keyframes for text animation */
  @keyframes textGlow {
    0%, 100% {
      text-shadow: 0 0 30px rgba(168, 85, 247, 0.4),
                   0 0 60px rgba(168, 85, 247, 0.2);
    }
    50% {
      text-shadow: 0 0 40px rgba(168, 85, 247, 0.6),
                   0 0 80px rgba(168, 85, 247, 0.3);
    }
  }

  @keyframes scaleIn {
    from {
      transform: scale(0.8);
      opacity: 0;
    }
    to {
      transform: scale(1);
      opacity: 1;
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

/* Enhanced Background Pattern */
.bg-pattern {
  position: fixed;
  inset: 0;
  background: linear-gradient(120deg, #f0f7ff 0%, #e8f4ff 100%);
  opacity: 0.9;
}

.bg-pattern::before {
  content: '';
  position: absolute;
  inset: 0;
  background: 
    radial-gradient(circle at 20% 30%, rgba(58, 160, 228, 0.15) 0%, transparent 50%),
    radial-gradient(circle at 80% 70%, rgba(58, 160, 228, 0.15) 0%, transparent 50%),
    repeating-linear-gradient(45deg, rgba(58, 160, 228, 0.03) 0px, rgba(58, 160, 228, 0.03) 1px, transparent 1px, transparent 30px),
    repeating-linear-gradient(-45deg, rgba(58, 160, 228, 0.03) 0px, rgba(58, 160, 228, 0.03) 1px, transparent 1px, transparent 30px);
  animation: patternFloat 30s ease-in-out infinite;
}

.bg-pattern::after {
  content: '';
  position: absolute;
  inset: 0;
  background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M30 0L45 15H15L30 0z M30 60L15 45h30L30 60z' fill='%233aa0e4' fill-opacity='0.03'/%3E%3C/svg%3E");
  animation: symbolFloat 40s linear infinite;
}

/* Enhanced Floating Circles */
.floating-circle {
  position: fixed;
  border-radius: 50%;
  background: radial-gradient(circle at center, rgba(58, 160, 228, 0.2) 0%, rgba(58, 160, 228, 0.1) 50%, transparent 70%);
  filter: blur(20px);
  mix-blend-mode: screen;
}

.floating-circle::before {
  content: '';
  position: absolute;
  inset: 10%;
  border-radius: inherit;
  background: radial-gradient(circle at center, rgba(255, 255, 255, 0.8) 0%, transparent 60%);
  opacity: 0.5;
}

/* Digital Circuit Lines */
.circuit-lines {
  position: fixed;
  inset: 0;
  background-image: 
    linear-gradient(90deg, rgba(58, 160, 228, 0.03) 1px, transparent 1px),
    linear-gradient(rgba(58, 160, 228, 0.03) 1px, transparent 1px);
  background-size: 50px 50px;
  mask-image: radial-gradient(circle at center, transparent 0%, black 100%);
  animation: circuitPulse 15s ease-in-out infinite;
}

/* Enhanced Animations */
@keyframes patternFloat {
  0%, 100% {
    transform: translateY(0) scale(1);
    opacity: 0.8;
  }
  50% {
    transform: translateY(-20px) scale(1.05);
    opacity: 1;
  }
}

@keyframes symbolFloat {
  0% {
    background-position: 0 0;
    opacity: 0.05;
  }
  50% {
    opacity: 0.08;
  }
  100% {
    background-position: 60px 60px;
    opacity: 0.05;
  }
}

@keyframes circuitPulse {
  0%, 100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 0.5;
    transform: scale(1.05);
  }
}

/* Gradient Background */
.gradient-bg {
  background: linear-gradient(135deg, 
    #f0f7ff 0%, 
    #e8f4ff 25%, 
    #dcedff 50%, 
    #e8f4ff 75%, 
    #f0f7ff 100%
  );
  background-size: 400% 400%;
  animation: gradientShift 15s ease infinite;
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Floating shapes */
.shape {
  @apply absolute pointer-events-none opacity-15 blur-[0.5px] will-change-transform;
}

.triangle {
  width: 0;
  height: 0;
  border-left: 25px solid transparent;
  border-right: 25px solid transparent;
  border-bottom: 45px solid #3aa0e4;
  animation: floatShape 20s ease-in-out infinite;
}

.circle {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: linear-gradient(135deg, #3aa0e4, #2980b9);
  animation: floatShape 15s ease-in-out infinite;
}

/* Scroll animations */
[data-scroll] {
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

[data-scroll].is-visible {
  opacity: 1;
  transform: translateY(0);
}

/* Animation delays */
.delay-100 { animation-delay: 100ms; }
.delay-200 { animation-delay: 200ms; }
.delay-300 { animation-delay: 300ms; }
.delay-400 { animation-delay: 400ms; }
.delay-500 { animation-delay: 500ms; }

.duration-300 { transition-duration: 300ms; }
.duration-500 { transition-duration: 500ms; }
.duration-700 { transition-duration: 700ms; }
.duration-1000 { transition-duration: 1000ms; }

/* Responsive */
@media (prefers-reduced-motion: reduce) {
  *, ::before, ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Add floating circles */
.floating-circles {
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 0;
}

/* Scale in animation */
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.scale-in {
  animation: scaleIn 0.5s ease forwards;
}

/* Fade in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  animation: fadeIn 0.5s ease forwards;
}

/* Add new keyframes for text animation */
@keyframes textGlow {
  0%, 100% {
    text-shadow: 0 0 30px rgba(168, 85, 247, 0.4),
                 0 0 60px rgba(168, 85, 247, 0.2);
  }
  50% {
    text-shadow: 0 0 40px rgba(168, 85, 247, 0.6),
                 0 0 80px rgba(168, 85, 247, 0.3);
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

